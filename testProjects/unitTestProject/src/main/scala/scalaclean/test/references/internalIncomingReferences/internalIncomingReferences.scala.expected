package scalaclean.test.references.internalIncomingReferences

class Parent {
  def foo: Unit = ()/* internalIncomingReferences(G:scalaclean/test/references/internalIncomingReferences/Parent#foo().) - G:scalaclean/test/references/internalIncomingReferences/XX. */
}/* internalIncomingReferences(G:scalaclean/test/references/internalIncomingReferences/Parent#) - G:scalaclean/test/references/internalIncomingReferences/Child# :: G:scalaclean/test/references/internalIncomingReferences/Child#`<init>`(). :: G:scalaclean/test/references/internalIncomingReferences/Parent#`<init>`(). */
class Child extends Parent{
  def bar(x:Any): Unit = ()/* internalIncomingReferences(G:scalaclean/test/references/internalIncomingReferences/Child#bar().) - G:scalaclean/test/references/internalIncomingReferences/XX. */
}/* internalIncomingReferences(G:scalaclean/test/references/internalIncomingReferences/Child#) - G:scalaclean/test/references/internalIncomingReferences/Child#`<init>`(). :: G:scalaclean/test/references/internalIncomingReferences/XX. */
object Special {
  def myVar1 = 1/* internalIncomingReferences(G:scalaclean/test/references/internalIncomingReferences/Special.myVar1().) - G:scalaclean/test/references/internalIncomingReferences/XX. */
  def myVar1_=(i: Int) = ()/* internalIncomingReferences(G:scalaclean/test/references/internalIncomingReferences/Special.`myVar1_=`().) - G:scalaclean/test/references/internalIncomingReferences/XX. */

  def myVar2 = 1/* internalIncomingReferences(G:scalaclean/test/references/internalIncomingReferences/Special.myVar2().) - G:scalaclean/test/references/internalIncomingReferences/XX. */
  def myVar2_=(i: Int) = ()/* internalIncomingReferences(G:scalaclean/test/references/internalIncomingReferences/Special.`myVar2_=`().) - G:scalaclean/test/references/internalIncomingReferences/XX. */

  def myVar3 = 1
  def myVar3_=(i: Int) = ()/* internalIncomingReferences(G:scalaclean/test/references/internalIncomingReferences/Special.`myVar3_=`().) - G:scalaclean/test/references/internalIncomingReferences/XX. */

  def myVar4 = 1/* internalIncomingReferences(G:scalaclean/test/references/internalIncomingReferences/Special.myVar4().) - G:scalaclean/test/references/internalIncomingReferences/XX. */
  def myVar4_=(i: Int) = ()

  def apply() = 7/* internalIncomingReferences(G:scalaclean/test/references/internalIncomingReferences/Special.apply().) - G:scalaclean/test/references/internalIncomingReferences/XX. */
  def unapply(a:Any) = Some(1,2)/* internalIncomingReferences(G:scalaclean/test/references/internalIncomingReferences/Special.unapply().) - G:scalaclean/test/references/internalIncomingReferences/XX. */

  def update(i: Int, j: Int) = ()/* internalIncomingReferences(G:scalaclean/test/references/internalIncomingReferences/Special.update().) - G:scalaclean/test/references/internalIncomingReferences/XX. */

}/* internalIncomingReferences(G:scalaclean/test/references/internalIncomingReferences/Special.) - G:scalaclean/test/references/internalIncomingReferences/XX. */

object XX {
  new Child().foo
  new Child().bar(1)

  Special.myVar1 += 1

  Special.myVar2 = 9
  println(Special.myVar2)

  Special.myVar3 = 9

  println(Special.myVar4)

  Special()
  val x: Any = 1/* internalIncomingReferences(G:scalaclean/test/references/internalIncomingReferences/XX.x.) - G:scalaclean/test/references/internalIncomingReferences/XX.x. */
  x match {
    case i: Int => ???
    case Special(a,b) => ???
  }

  Special(1) = 7
}