package scalaclean.test.nodes

trait GrandParentTrait {
  def d1: Int/* PlainMethodModel C:scalaclean.test.nodes.GrandParentTrait/M:d1() [61-72]  [[C:scalaclean.test.nodes.GrandParentTrait/M:d1()]] */
  def d2(a:Int): Int/* PlainMethodModel C:scalaclean.test.nodes.GrandParentTrait/M:d2(scala.Int) [76-94]  [[C:scalaclean.test.nodes.GrandParentTrait/M:d2(scala.Int)]] */
  def d2a(a:Int)(b:Int): Int/* PlainMethodModel C:scalaclean.test.nodes.GrandParentTrait/M:d2a(scala.Intscala.Int) [98-124]  [[C:scalaclean.test.nodes.GrandParentTrait/M:d2a(scala.Intscala.Int)]] */
  def d3()(): Int/* PlainMethodModel C:scalaclean.test.nodes.GrandParentTrait/M:d3() [128-143]  [[C:scalaclean.test.nodes.GrandParentTrait/M:d3()]] */

}/* TraitModel C:scalaclean.test.nodes.GrandParentTrait [33-148]  [[C:scalaclean.test.nodes.GrandParentTrait]] */
trait ParentTrait extends GrandParentTrait {
  def d3(): () => Int = ???/* PlainMethodModel C:scalaclean.test.nodes.ParentTrait/M:d3() [198-223]  [[C:scalaclean.test.nodes.ParentTrait/M:d3()]] */
}/* TraitModel C:scalaclean.test.nodes.ParentTrait [150-226]  [[C:scalaclean.test.nodes.ParentTrait]] */
trait ChildTrait extends ParentTrait {
  override def d3(): () => Int = ???/* PlainMethodModel C:scalaclean.test.nodes.ChildTrait/M:d3() [270-304]  [[C:scalaclean.test.nodes.ChildTrait/M:d3()]] */
  def d2a(a:Int) = d2 _/* PlainMethodModel C:scalaclean.test.nodes.ChildTrait/M:d2a(scala.Int) [308-329]  [[C:scalaclean.test.nodes.ChildTrait/M:d2a(scala.Int)]] */

}/* TraitModel C:scalaclean.test.nodes.ChildTrait [228-334]  [[C:scalaclean.test.nodes.ChildTrait]] */
trait Trait_ChildTrait extends ParentTrait {
  override def equals(obj: Any): Boolean = super.equals(obj)/* PlainMethodModel C:scalaclean.test.nodes.Trait_ChildTrait/M:equals(scala.Any) [384-442]  [[C:scalaclean.test.nodes.Trait_ChildTrait/M:equals(scala.Any)]] */

  override def clone(): AnyRef = super.clone()/* PlainMethodModel C:scalaclean.test.nodes.Trait_ChildTrait/M:clone() [448-492]  [[C:scalaclean.test.nodes.Trait_ChildTrait/M:clone()]] */

  override def toString: String = super.toString/* PlainMethodModel C:scalaclean.test.nodes.Trait_ChildTrait/M:toString() [498-544]  [[C:scalaclean.test.nodes.Trait_ChildTrait/M:toString()]] */

  override def finalize(): Unit = super.finalize()/* PlainMethodModel C:scalaclean.test.nodes.Trait_ChildTrait/M:finalize() [550-598]  [[C:scalaclean.test.nodes.Trait_ChildTrait/M:finalize()]] */

  override def hashCode(): Int = super.hashCode()/* PlainMethodModel C:scalaclean.test.nodes.Trait_ChildTrait/M:hashCode() [604-651]  [[C:scalaclean.test.nodes.Trait_ChildTrait/M:hashCode()]] */

  override def d1: Int = ???/* PlainMethodModel C:scalaclean.test.nodes.Trait_ChildTrait/M:d1() [657-683]  [[C:scalaclean.test.nodes.Trait_ChildTrait/M:d1()]] */

  override def d2(a: Int): Int = ???/* PlainMethodModel C:scalaclean.test.nodes.Trait_ChildTrait/M:d2(scala.Int) [689-723]  [[C:scalaclean.test.nodes.Trait_ChildTrait/M:d2(scala.Int)]] */

  override def d2a(a: Int)(b: Int): Int = ???/* PlainMethodModel C:scalaclean.test.nodes.Trait_ChildTrait/M:d2a(scala.Intscala.Int) [729-772]  [[C:scalaclean.test.nodes.Trait_ChildTrait/M:d2a(scala.Intscala.Int)]] */

  override def d3()(): Int = ???/* PlainMethodModel C:scalaclean.test.nodes.Trait_ChildTrait/M:d3() [778-808]  [[C:scalaclean.test.nodes.Trait_ChildTrait/M:d3()]] */
}/* TraitModel C:scalaclean.test.nodes.Trait_ChildTrait [336-811]  [[C:scalaclean.test.nodes.Trait_ChildTrait]] */
class Class_ChildTrait extends ParentTrait {
  override def equals(obj: Any): Boolean = super.equals(obj)/* PlainMethodModel C:scalaclean.test.nodes.Class_ChildTrait/M:equals(scala.Any) [861-919]  [[C:scalaclean.test.nodes.Class_ChildTrait/M:equals(scala.Any)]] */

  override def clone(): AnyRef = super.clone()/* PlainMethodModel C:scalaclean.test.nodes.Class_ChildTrait/M:clone() [925-969]  [[C:scalaclean.test.nodes.Class_ChildTrait/M:clone()]] */

  override def toString: String = super.toString/* PlainMethodModel C:scalaclean.test.nodes.Class_ChildTrait/M:toString() [975-1021]  [[C:scalaclean.test.nodes.Class_ChildTrait/M:toString()]] */

  override def finalize(): Unit = super.finalize()/* PlainMethodModel C:scalaclean.test.nodes.Class_ChildTrait/M:finalize() [1027-1075]  [[C:scalaclean.test.nodes.Class_ChildTrait/M:finalize()]] */

  override def hashCode(): Int = super.hashCode()/* PlainMethodModel C:scalaclean.test.nodes.Class_ChildTrait/M:hashCode() [1081-1128]  [[C:scalaclean.test.nodes.Class_ChildTrait/M:hashCode()]] */

  override def d1: Int = ???/* PlainMethodModel C:scalaclean.test.nodes.Class_ChildTrait/M:d1() [1134-1160]  [[C:scalaclean.test.nodes.Class_ChildTrait/M:d1()]] */

  override def d2(a: Int): Int = ???/* PlainMethodModel C:scalaclean.test.nodes.Class_ChildTrait/M:d2(scala.Int) [1166-1200]  [[C:scalaclean.test.nodes.Class_ChildTrait/M:d2(scala.Int)]] */

  override def d2a(a: Int)(b: Int): Int = ???/* PlainMethodModel C:scalaclean.test.nodes.Class_ChildTrait/M:d2a(scala.Intscala.Int) [1206-1249]  [[C:scalaclean.test.nodes.Class_ChildTrait/M:d2a(scala.Intscala.Int)]] */

  override def d3()(): Int = ???/* PlainMethodModel C:scalaclean.test.nodes.Class_ChildTrait/M:d3() [1255-1285]  [[C:scalaclean.test.nodes.Class_ChildTrait/M:d3()]] */
}/* ClassModel C:scalaclean.test.nodes.Class_ChildTrait [813-1288]  [[C:scalaclean.test.nodes.Class_ChildTrait]] */
object Object_ChildTrait extends ParentTrait {
  override def equals(obj: Any): Boolean = super.equals(obj)/* PlainMethodModel C:scalaclean.test.nodes.Object_ChildTrait/M:equals(scala.Any) [1340-1398]  [[C:scalaclean.test.nodes.Object_ChildTrait/M:equals(scala.Any)]] */

  override def clone(): AnyRef = super.clone()/* PlainMethodModel C:scalaclean.test.nodes.Object_ChildTrait/M:clone() [1404-1448]  [[C:scalaclean.test.nodes.Object_ChildTrait/M:clone()]] */

  override def toString: String = super.toString/* PlainMethodModel C:scalaclean.test.nodes.Object_ChildTrait/M:toString() [1454-1500]  [[C:scalaclean.test.nodes.Object_ChildTrait/M:toString()]] */

  override def finalize(): Unit = super.finalize()/* PlainMethodModel C:scalaclean.test.nodes.Object_ChildTrait/M:finalize() [1506-1554]  [[C:scalaclean.test.nodes.Object_ChildTrait/M:finalize()]] */

  override def hashCode(): Int = super.hashCode()/* PlainMethodModel C:scalaclean.test.nodes.Object_ChildTrait/M:hashCode() [1560-1607]  [[C:scalaclean.test.nodes.Object_ChildTrait/M:hashCode()]] */

  override def d1: Int = ???/* PlainMethodModel C:scalaclean.test.nodes.Object_ChildTrait/M:d1() [1613-1639]  [[C:scalaclean.test.nodes.Object_ChildTrait/M:d1()]] */

  override def d2(a: Int): Int = ???/* PlainMethodModel C:scalaclean.test.nodes.Object_ChildTrait/M:d2(scala.Int) [1645-1679]  [[C:scalaclean.test.nodes.Object_ChildTrait/M:d2(scala.Int)]] */

  override def d2a(a: Int)(b: Int): Int = ???/* PlainMethodModel C:scalaclean.test.nodes.Object_ChildTrait/M:d2a(scala.Intscala.Int) [1685-1728]  [[C:scalaclean.test.nodes.Object_ChildTrait/M:d2a(scala.Intscala.Int)]] */

  override def d3()(): Int = ???/* PlainMethodModel C:scalaclean.test.nodes.Object_ChildTrait/M:d3() [1734-1764]  [[C:scalaclean.test.nodes.Object_ChildTrait/M:d3()]] */
}/* ObjectModel O:scalaclean.test.nodes.Object_ChildTrait [1290-1767]  [[O:scalaclean.test.nodes.Object_ChildTrait]] */


//class GrandParentClass {
//
//  def foo: Unit = ()
//}
//class ParentClass extends GrandParentClass {
//}
//class ChildClass extends ParentClass{
//  def bar(x:Any): Unit = ()
//}
//
//object ClildObject extends ChildClass {
//  new Child().foo
//  new Child().bar(1)
//}

object TestVarVal {
  val x1:Int = 5/* ValModel C:scalaclean.test.nodes.TestVarVal/V:x1  [2086-2100]  lazy=false [[C:scalaclean.test.nodes.TestVarVal/V:x1 ]] */
  var x2:Int = 5/* VarModel C:scalaclean.test.nodes.TestVarVal/V:x2  [2104-2118]  [[C:scalaclean.test.nodes.TestVarVal/V:x2 ]] */
  lazy val x3:Int = 5/* ValModel C:scalaclean.test.nodes.TestVarVal/V:x3 [2122-2141]  lazy=true [[C:scalaclean.test.nodes.TestVarVal/V:x3]] *//* GetterMethodModel C:scalaclean.test.nodes.TestVarVal/M:x3() [2122-2141]  [[C:scalaclean.test.nodes.TestVarVal/M:x3()]] */

  val (x10/* ValModel C:scalaclean.test.nodes.TestVarVal/V:x10  [2152-2155]  lazy=false [[C:scalaclean.test.nodes.TestVarVal/V:x10 ]] */, x11/* ValModel C:scalaclean.test.nodes.TestVarVal/V:x11  [2157-2160]  lazy=false [[C:scalaclean.test.nodes.TestVarVal/V:x11 ]] */) = (1,2)/* FieldsModel C:scalaclean.test.nodes.TestVarVal/V:x$1 [2147-2169]  [[C:scalaclean.test.nodes.TestVarVal/V:x$1]] */
  var (x20/* VarModel C:scalaclean.test.nodes.TestVarVal/V:x20  [2178-2181]  [[C:scalaclean.test.nodes.TestVarVal/V:x20 ]] */, x21/* VarModel C:scalaclean.test.nodes.TestVarVal/V:x21  [2183-2186]  [[C:scalaclean.test.nodes.TestVarVal/V:x21 ]] */) = (1,2)/* FieldsModel C:scalaclean.test.nodes.TestVarVal/V:x$2 [2173-2195]  [[C:scalaclean.test.nodes.TestVarVal/V:x$2]] */
  lazy val (x30/* ValModel C:scalaclean.test.nodes.TestVarVal/V:x30 [2209-2212]  lazy=true [[C:scalaclean.test.nodes.TestVarVal/V:x30]] *//* GetterMethodModel C:scalaclean.test.nodes.TestVarVal/M:x30() [2209-2212]  [[C:scalaclean.test.nodes.TestVarVal/M:x30()]] */, x31/* ValModel C:scalaclean.test.nodes.TestVarVal/V:x31 [2214-2217]  lazy=true [[C:scalaclean.test.nodes.TestVarVal/V:x31]] *//* GetterMethodModel C:scalaclean.test.nodes.TestVarVal/M:x31() [2214-2217]  [[C:scalaclean.test.nodes.TestVarVal/M:x31()]] */) = (1,2)/* FieldsModel C:scalaclean.test.nodes.TestVarVal/M:x$3() [2199-2226]  [[C:scalaclean.test.nodes.TestVarVal/M:x$3()]] */

}/* ObjectModel O:scalaclean.test.nodes.TestVarVal [2063-2231]  [[O:scalaclean.test.nodes.TestVarVal]] */